# This is a basic workflow to help you get started with Actions

name: cpp2sky test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BAZEL_LINK: https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64
  CLANG_LINK: https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.1/clang+llvm-10.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "/opt/llvm/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Setup clang-format
        run: |
          sudo wget -O /tmp/clang-llvm.tar.xz $CLANG_LINK
          sudo mkdir -p /opt/llvm
          sudo tar -xf /tmp/clang-llvm.tar.xz -C /opt/llvm --strip-components 1
          git clone https://github.com/Sarcasm/run-clang-format.git
      - name: Run clang-format
        run: find ./ -iname "*.h" -o -iname "*.cc" | xargs ./run-clang-format/run-clang-format.py

  test:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "/opt/llvm/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Install Bazel
        run: |
          sudo wget -O /usr/local/bin/bazel $BAZEL_LINK
          sudo chmod +x /usr/local/bin/bazel
      - name: Install Clang
        run: |
          sudo wget -O /tmp/clang-llvm.tar.xz $CLANG_LINK
          sudo mkdir -p /opt/llvm
          sudo tar -xf /tmp/clang-llvm.tar.xz -C /opt/llvm --strip-components 1
      - name: Run bazel test with GCC c++11
        run: |
          bazel test --cxxopt=-std=c++0x //...
      - name: Run bazel test with GCC c++17
        run: |
          bazel test  --cxxopt=-std=c++17 //...
      - name: Run bazel test with CLANG c++11
        run: |
          bazel test --config=clang --cxxopt=-std=c++0x //...
      - name: Run bazel test with CLANG c++17
        run: |
          bazel test --config=clang --cxxopt=-std=c++17 //...
      - name: Install lcov and genhtml
        run: |
          sudo apt update
          sudo apt -y install lcov
      - name: Run coverage test
        run: |
          ./coverage.sh
      - name: upload coverage data to codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: ./coverage_report/coverage.dat
          name: codecov-cpp2sky
          verbose: true

  e2e-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare service container
        run: |
          docker-compose -f test/e2e/docker/docker-compose.e2e.yml up -d
      - name: Run e2e
        run: |
          pip3 install --upgrade pip
          pip3 install setuptools
          pip3 install -r test/e2e/requirements.txt
          python3 test/e2e/main.py --expected_file=test/e2e/data/expected.yaml --max_retry_times=3 --target_path=/ping

  e2e-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Prepare service container
        run: |
          docker-compose -f test/e2e/docker/docker-compose.e2e-python.yml up -d
      - name: Run e2e
        run: |
          pip3 install --upgrade pip
          pip3 install setuptools
          pip3 install -r test/e2e/requirements.txt
          python3 test/e2e/main.py --expected_file=test/e2e/data/expected-python.yaml --max_retry_times=3 --target_path=/ping2
